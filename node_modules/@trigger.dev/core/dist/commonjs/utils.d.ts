export declare function assertExhaustive(x: never): never;
export declare function tryCatch<T, E = Error>(promise: Promise<T> | undefined): Promise<[null, T] | [E, null]>;
export type Deferred<T> = {
    promise: Promise<T>;
    resolve: (value: T) => void;
    reject: (reason?: any) => void;
};
export declare function promiseWithResolvers<T>(): Deferred<T>;
