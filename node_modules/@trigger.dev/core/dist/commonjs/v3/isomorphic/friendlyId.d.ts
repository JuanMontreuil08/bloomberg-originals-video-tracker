export declare function generateFriendlyId(prefix: string, size?: number): string;
export declare function generateInternalId(): string;
/** Convert an internal ID to a friendly ID */
export declare function toFriendlyId(entityName: string, internalId: string): string;
/** Convert a friendly ID to an internal ID */
export declare function fromFriendlyId(friendlyId: string, expectedEntityName?: string): string;
export declare class IdUtil {
    private entityName;
    constructor(entityName: string);
    generate(): {
        id: string;
        friendlyId: string;
    };
    toFriendlyId(internalId: string): string;
    fromFriendlyId(friendlyId: string): string;
    /** Will convert friendlyIds, and will leave ids as they are */
    toId(value: string): string;
}
export declare const BackgroundWorkerId: IdUtil;
export declare const CheckpointId: IdUtil;
export declare const QueueId: IdUtil;
export declare const RunId: IdUtil;
export declare const SnapshotId: IdUtil;
export declare const WaitpointId: IdUtil;
export declare const BatchId: IdUtil;
export declare const BulkActionId: IdUtil;
export declare const AttemptId: IdUtil;
export declare class IdGenerator {
    private alphabet;
    private length;
    private prefix;
    constructor({ alphabet, length, prefix }: {
        alphabet: string;
        length: number;
        prefix: string;
    });
    generate(): string;
}
