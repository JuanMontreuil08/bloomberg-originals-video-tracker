import { TracerProvider } from "@opentelemetry/api";
import { type Instrumentation } from "@opentelemetry/instrumentation";
import { LogRecordExporter, LoggerProvider } from "@opentelemetry/sdk-logs";
import { SpanExporter } from "@opentelemetry/sdk-trace-node";
export type TracingDiagnosticLogLevel = "none" | "error" | "warn" | "info" | "debug" | "verbose" | "all";
export type TracingSDKConfig = {
    url: string;
    forceFlushTimeoutMillis?: number;
    instrumentations?: Instrumentation[];
    exporters?: SpanExporter[];
    logExporters?: LogRecordExporter[];
    diagLogLevel?: TracingDiagnosticLogLevel;
};
export declare class TracingSDK {
    private readonly config;
    private readonly _logProvider;
    private readonly _spanExporter;
    private readonly _traceProvider;
    readonly getLogger: LoggerProvider["getLogger"];
    readonly getTracer: TracerProvider["getTracer"];
    constructor(config: TracingSDKConfig);
    flush(): Promise<void>;
    shutdown(): Promise<void>;
}
