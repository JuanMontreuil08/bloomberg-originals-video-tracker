import { SupervisorHttpClient } from "./http.js";
import { WorkerApiDequeueResponseBody } from "./schemas.js";
import { PreDequeueFn, PreSkipFn } from "./types.js";
type RunQueueConsumerOptions = {
    client: SupervisorHttpClient;
    intervalMs: number;
    idleIntervalMs: number;
    preDequeue?: PreDequeueFn;
    preSkip?: PreSkipFn;
    maxRunCount?: number;
    onDequeue: (messages: WorkerApiDequeueResponseBody) => Promise<void>;
};
export declare class RunQueueConsumer {
    private readonly client;
    private readonly preDequeue?;
    private readonly preSkip?;
    private readonly maxRunCount?;
    private readonly onDequeue;
    private readonly logger;
    private intervalMs;
    private idleIntervalMs;
    private isEnabled;
    constructor(opts: RunQueueConsumerOptions);
    start(): void;
    stop(): void;
    private dequeue;
    scheduleNextDequeue(delayMs: number): void;
}
export {};
