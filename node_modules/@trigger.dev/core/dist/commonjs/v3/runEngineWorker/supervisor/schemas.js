"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkerApiRunSnapshotsSinceResponseBody = exports.WorkerApiSuspendCompletionResponseBody = exports.WorkerApiDebugLogBody = exports.WorkerApiDebugLogBodyInput = exports.DebugLogPropertiesInput = exports.DebugLogProperties = exports.DebugLogPropertiesValue = exports.WorkerApiDequeueFromVersionResponseBody = exports.WorkerApiRunLatestSnapshotResponseBody = exports.WorkerApiRunAttemptCompleteResponseBody = exports.WorkerApiRunAttemptCompleteRequestBody = exports.WorkerApiRunAttemptStartResponseBody = exports.WorkerApiRunAttemptStartRequestBody = exports.WorkerApiRunHeartbeatResponseBody = exports.WorkerApiRunHeartbeatRequestBody = exports.WorkerApiDequeueResponseBody = exports.WorkerApiDequeueRequestBody = exports.WorkerApiConnectResponseBody = exports.WorkerApiConnectRequestBody = exports.WorkerApiContinueRunExecutionRequestBody = exports.WorkerApiSuspendRunResponseBody = exports.WorkerApiSuspendRunRequestBody = exports.WorkerApiHeartbeatResponseBody = exports.WorkerApiHeartbeatRequestBody = void 0;
const zod_1 = require("zod");
const common_js_1 = require("../../schemas/common.js");
const runEngine_js_1 = require("../../schemas/runEngine.js");
exports.WorkerApiHeartbeatRequestBody = zod_1.z.object({
    cpu: zod_1.z.object({
        used: zod_1.z.number(),
        available: zod_1.z.number(),
    }),
    memory: zod_1.z.object({
        used: zod_1.z.number(),
        available: zod_1.z.number(),
    }),
    tasks: zod_1.z.array(zod_1.z.string()),
});
exports.WorkerApiHeartbeatResponseBody = zod_1.z.object({
    ok: zod_1.z.literal(true),
});
exports.WorkerApiSuspendRunRequestBody = zod_1.z.discriminatedUnion("success", [
    zod_1.z.object({
        success: zod_1.z.literal(true),
        checkpoint: runEngine_js_1.CheckpointInput,
    }),
    zod_1.z.object({
        success: zod_1.z.literal(false),
        error: zod_1.z.string(),
    }),
]);
exports.WorkerApiSuspendRunResponseBody = zod_1.z.object({
    ok: zod_1.z.literal(true),
});
exports.WorkerApiContinueRunExecutionRequestBody = runEngine_js_1.ExecutionResult;
exports.WorkerApiConnectRequestBody = zod_1.z.object({
    metadata: zod_1.z.record(zod_1.z.any()),
});
exports.WorkerApiConnectResponseBody = zod_1.z.object({
    ok: zod_1.z.literal(true),
    workerGroup: zod_1.z.object({
        type: zod_1.z.string(),
        name: zod_1.z.string(),
    }),
});
exports.WorkerApiDequeueRequestBody = zod_1.z.object({
    maxResources: runEngine_js_1.MachineResources.optional(),
    maxRunCount: zod_1.z.number().optional(),
});
exports.WorkerApiDequeueResponseBody = runEngine_js_1.DequeuedMessage.array();
exports.WorkerApiRunHeartbeatRequestBody = zod_1.z.object({
    cpu: zod_1.z.number().optional(),
    memory: zod_1.z.number().optional(),
});
exports.WorkerApiRunHeartbeatResponseBody = zod_1.z.object({
    ok: zod_1.z.literal(true),
});
exports.WorkerApiRunAttemptStartRequestBody = zod_1.z.object({
    isWarmStart: zod_1.z.boolean().optional(),
});
exports.WorkerApiRunAttemptStartResponseBody = runEngine_js_1.StartRunAttemptResult.and(zod_1.z.object({
    envVars: zod_1.z.record(zod_1.z.string()),
}));
exports.WorkerApiRunAttemptCompleteRequestBody = zod_1.z.object({
    completion: common_js_1.TaskRunExecutionResult,
});
exports.WorkerApiRunAttemptCompleteResponseBody = zod_1.z.object({
    result: runEngine_js_1.CompleteRunAttemptResult,
});
exports.WorkerApiRunLatestSnapshotResponseBody = zod_1.z.object({
    execution: runEngine_js_1.RunExecutionData,
});
exports.WorkerApiDequeueFromVersionResponseBody = runEngine_js_1.DequeuedMessage.array();
exports.DebugLogPropertiesValue = zod_1.z.union([
    zod_1.z.string(),
    zod_1.z.number(),
    zod_1.z.boolean(),
    zod_1.z.array(zod_1.z.string().nullish()),
    zod_1.z.array(zod_1.z.number().nullish()),
    zod_1.z.array(zod_1.z.boolean().nullish()),
]);
exports.DebugLogProperties = zod_1.z.record(zod_1.z.string(), exports.DebugLogPropertiesValue.optional());
exports.DebugLogPropertiesInput = zod_1.z.record(zod_1.z.string(), zod_1.z.unknown());
exports.WorkerApiDebugLogBodyInput = zod_1.z.object({
    time: zod_1.z.coerce.date(),
    message: zod_1.z.string(),
    properties: exports.DebugLogPropertiesInput.optional(),
});
exports.WorkerApiDebugLogBody = zod_1.z.object({
    time: zod_1.z.coerce.date(),
    message: zod_1.z.string(),
    properties: exports.DebugLogProperties.optional(),
});
exports.WorkerApiSuspendCompletionResponseBody = zod_1.z.object({
    success: zod_1.z.boolean(),
    error: zod_1.z.string().optional(),
});
exports.WorkerApiRunSnapshotsSinceResponseBody = zod_1.z.object({
    snapshots: zod_1.z.array(runEngine_js_1.RunExecutionData),
});
//# sourceMappingURL=schemas.js.map