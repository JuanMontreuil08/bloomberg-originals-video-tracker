"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RetrieveQueueParam = exports.QueueTypeName = exports.ListQueueOptions = exports.QueueItem = exports.RetrieveQueueType = exports.QueueType = void 0;
const zod_1 = require("zod");
const queueTypes = ["task", "custom"];
/**
 * The type of queue, either "task" or "custom"
 * "task" are created automatically for each task.
 * "custom" are created by you explicitly in your code.
 * */
exports.QueueType = zod_1.z.enum(queueTypes);
exports.RetrieveQueueType = zod_1.z.enum([...queueTypes, "id"]);
exports.QueueItem = zod_1.z.object({
    /** The queue id, e.g. queue_12345 */
    id: zod_1.z.string(),
    /** The queue name */
    name: zod_1.z.string(),
    /**
     * The queue type, either "task" or "custom"
     * "task" are created automatically for each task.
     * "custom" are created by you explicitly in your code.
     * */
    type: exports.QueueType,
    /** The number of runs currently running */
    running: zod_1.z.number(),
    /** The number of runs currently queued */
    queued: zod_1.z.number(),
    /** The concurrency limit of the queue */
    concurrencyLimit: zod_1.z.number().nullable(),
    /** Whether the queue is paused. If it's paused, no new runs will be started. */
    paused: zod_1.z.boolean(),
});
exports.ListQueueOptions = zod_1.z.object({
    /** The page number */
    page: zod_1.z.number().optional(),
    /** The number of queues per page */
    perPage: zod_1.z.number().optional(),
});
exports.QueueTypeName = zod_1.z.object({
    /** "task" or "custom" */
    type: exports.QueueType,
    /** The name of your queue.
     * For "task" type it will be the task id, for "custom" it will be the name you specified.
     * */
    name: zod_1.z.string(),
});
/**
 * When retrieving a queue you can either use the queue id,
 * or the type and name.
 *
 * @example
 *
 * ```ts
 * // Use a queue id (they start with queue_
 * const q1 = await queues.retrieve("queue_12345");
 *
 * // Or use the type and name
 * // The default queue for your "my-task-id"
 * const q2 = await queues.retrieve({ type: "task", name: "my-task-id"});
 *
 * // The custom queue you defined in your code
 * const q3 = await queues.retrieve({ type: "custom", name: "my-custom-queue" });
 * ```
 */
exports.RetrieveQueueParam = zod_1.z.union([zod_1.z.string(), exports.QueueTypeName]);
//# sourceMappingURL=queues.js.map