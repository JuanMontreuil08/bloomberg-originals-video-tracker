"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.populateEnv = populateEnv;
/**
 * Populates process.env with values from the provided object
 *
 * @param envObject - Object containing environment variables to set
 * @param options - Optional configuration
 */
function populateEnv(envObject, options = {}) {
    const { override = false, debug = false, previousEnv } = options;
    if (!envObject || typeof envObject !== "object") {
        return;
    }
    // Set process.env values
    for (const key of Object.keys(envObject)) {
        if (Object.prototype.hasOwnProperty.call(process.env, key)) {
            if (override) {
                process.env[key] = envObject[key];
                if (debug) {
                    console.log(`"${key}" is already defined and WAS overwritten`);
                }
            }
            else if (debug) {
                console.log(`"${key}" is already defined and was NOT overwritten`);
            }
        }
        else {
            process.env[key] = envObject[key];
        }
    }
    if (previousEnv) {
        // if there are any keys in previousEnv that are not in envObject, remove them from process.env
        for (const key of Object.keys(previousEnv)) {
            if (!Object.prototype.hasOwnProperty.call(envObject, key)) {
                delete process.env[key];
            }
        }
    }
}
//# sourceMappingURL=populateEnv.js.map