import { DequeuedMessage } from "../schemas/runEngine.js";
import { WarmStartConnectResponse } from "../schemas/warmStart.js";
import { ApiResult } from "../zodfetch.js";
export type WarmStartClientOptions = {
    apiUrl: URL;
    controllerId: string;
    deploymentId: string;
    deploymentVersion: string;
    machineCpu: string;
    machineMemory: string;
};
export declare class WarmStartClient {
    private opts;
    private readonly logger;
    private readonly apiUrl;
    private backoff;
    private get connectUrl();
    private get warmStartUrl();
    constructor(opts: WarmStartClientOptions);
    connect(): Promise<ApiResult<WarmStartConnectResponse>>;
    warmStart({ workerInstanceName, connectionTimeoutMs, keepaliveMs, }: {
        workerInstanceName: string;
        connectionTimeoutMs: number;
        keepaliveMs: number;
    }): Promise<DequeuedMessage | null>;
    private longPoll;
}
