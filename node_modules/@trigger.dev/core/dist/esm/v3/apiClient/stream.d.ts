import { z } from "zod";
import { AsyncIterableStream } from "../streams/asyncIterableStream.js";
export type ZodShapeStreamOptions = {
    headers?: Record<string, string>;
    fetchClient?: typeof fetch;
    signal?: AbortSignal;
    onError?: (e: Error) => void;
};
export type ZodShapeStreamInstance<TShapeSchema extends z.ZodTypeAny> = {
    stream: AsyncIterableStream<z.output<TShapeSchema>>;
    stop: (delay?: number) => void;
};
export declare function zodShapeStream<TShapeSchema extends z.ZodTypeAny>(schema: TShapeSchema, url: string, options?: ZodShapeStreamOptions): ZodShapeStreamInstance<TShapeSchema>;
export declare class LineTransformStream extends TransformStream<string, string[]> {
    private buffer;
    constructor();
}
