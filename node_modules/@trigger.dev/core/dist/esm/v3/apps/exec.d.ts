import { SimpleStructuredLogger } from "../utils/structuredLogger.js";
import { type Output, type Result } from "tinyexec";
export declare class ExecResult {
    pid?: number;
    exitCode?: number;
    aborted: boolean;
    killed: boolean;
    constructor(result: Result);
}
export interface ExecOptions {
    logger?: SimpleStructuredLogger;
    abortSignal?: AbortSignal;
    logOutput?: boolean;
    trimArgs?: boolean;
    neverThrow?: boolean;
}
export declare class Exec {
    private logger;
    private abortSignal;
    private logOutput;
    private trimArgs;
    private neverThrow;
    constructor(opts: ExecOptions);
    x(command: string, args?: string[], opts?: {
        neverThrow?: boolean;
        ignoreAbort?: boolean;
    }): Promise<Output>;
    static Result: typeof ExecResult;
}
export { type Output };
