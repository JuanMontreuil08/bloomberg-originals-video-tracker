import { WORKER_HEADERS } from "../consts.js";
import { createHeaders } from "../util.js";
export function getDefaultWorkerHeaders(options) {
    return createHeaders({
        Authorization: `Bearer ${options.workerToken}`,
        [WORKER_HEADERS.INSTANCE_NAME]: options.instanceName,
        [WORKER_HEADERS.DEPLOYMENT_ID]: options.deploymentId,
        [WORKER_HEADERS.MANAGED_SECRET]: options.managedWorkerSecret,
    });
}
function redactString(value, end = 10) {
    return value.slice(0, end) + "*".repeat(value.length - end);
}
function redactNumber(value, end = 10) {
    const str = String(value);
    const redacted = redactString(str, end);
    return Number(redacted);
}
export function redactKeys(obj, keys) {
    const redacted = { ...obj };
    for (const key of keys) {
        const value = obj[key];
        if (typeof value === "number") {
            redacted[key] = redactNumber(value);
        }
        else if (typeof value === "string") {
            redacted[key] = redactString(value);
        }
        else {
            continue;
        }
    }
    return redacted;
}
//# sourceMappingURL=util.js.map