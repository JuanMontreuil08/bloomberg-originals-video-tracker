import { z } from "zod";
import { WorkerApiRunHeartbeatRequestBody, WorkerApiHeartbeatResponseBody, WorkerApiRunAttemptCompleteRequestBody, WorkerApiRunAttemptCompleteResponseBody, WorkerApiRunAttemptStartRequestBody, WorkerApiRunAttemptStartResponseBody, WorkerApiRunLatestSnapshotResponseBody, WorkerApiDequeueFromVersionResponseBody, WorkerApiContinueRunExecutionRequestBody, WorkerApiDebugLogBody, WorkerApiRunSnapshotsSinceResponseBody, } from "../supervisor/schemas.js";
export const WorkloadHeartbeatRequestBody = WorkerApiRunHeartbeatRequestBody;
export const WorkloadHeartbeatResponseBody = WorkerApiHeartbeatResponseBody;
export const WorkloadSuspendRunResponseBody = z.discriminatedUnion("ok", [
    z.object({
        ok: z.literal(true),
    }),
    z.object({
        ok: z.literal(false),
        error: z.string(),
    }),
]);
export const WorkloadContinueRunExecutionResponseBody = WorkerApiContinueRunExecutionRequestBody;
export const WorkloadRunAttemptCompleteRequestBody = WorkerApiRunAttemptCompleteRequestBody;
export const WorkloadRunAttemptCompleteResponseBody = WorkerApiRunAttemptCompleteResponseBody;
export const WorkloadRunAttemptStartRequestBody = WorkerApiRunAttemptStartRequestBody;
export const WorkloadRunAttemptStartResponseBody = WorkerApiRunAttemptStartResponseBody;
export const WorkloadRunLatestSnapshotResponseBody = WorkerApiRunLatestSnapshotResponseBody;
export const WorkloadDebugLogRequestBody = WorkerApiDebugLogBody;
export const WorkloadDequeueFromVersionResponseBody = WorkerApiDequeueFromVersionResponseBody;
export const WorkloadRunSnapshotsSinceResponseBody = WorkerApiRunSnapshotsSinceResponseBody;
//# sourceMappingURL=schemas.js.map