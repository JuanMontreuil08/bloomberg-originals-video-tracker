export type MetadataOptions<T> = {
    baseUrl: string;
    runId: string;
    key: string;
    source: AsyncIterable<T>;
    headers?: Record<string, string>;
    signal?: AbortSignal;
    version?: "v1" | "v2";
    target?: "self" | "parent" | "root";
    maxRetries?: number;
};
export declare class MetadataStream<T> {
    private options;
    private controller;
    private serverStream;
    private consumerStream;
    private streamPromise;
    private retryCount;
    private readonly maxRetries;
    private currentChunkIndex;
    constructor(options: MetadataOptions<T>);
    private createTeeStreams;
    private makeRequest;
    private initializeServerStream;
    wait(): Promise<void>;
    [Symbol.asyncIterator](): AsyncIterableIterator<T>;
    private buildUrl;
}
