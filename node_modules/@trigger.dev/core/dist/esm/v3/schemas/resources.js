import { z } from "zod";
import { QueueManifest, RetryOptions, ScheduleMetadata } from "./schemas.js";
import { MachineConfig } from "./common.js";
export const TaskResource = z.object({
    id: z.string(),
    description: z.string().optional(),
    filePath: z.string(),
    exportName: z.string().optional(),
    queue: QueueManifest.extend({ name: z.string().optional() }).optional(),
    retry: RetryOptions.optional(),
    machine: MachineConfig.optional(),
    triggerSource: z.string().optional(),
    schedule: ScheduleMetadata.optional(),
    maxDuration: z.number().optional(),
    // JSONSchema type - using z.unknown() for runtime validation to accept JSONSchema7
    payloadSchema: z.unknown().optional(),
});
export const BackgroundWorkerSourceFileMetadata = z.object({
    filePath: z.string(),
    contents: z.string(),
    contentHash: z.string(),
    taskIds: z.array(z.string()),
});
export const BackgroundWorkerMetadata = z.object({
    packageVersion: z.string(),
    contentHash: z.string(),
    cliPackageVersion: z.string().optional(),
    tasks: z.array(TaskResource),
    queues: z.array(QueueManifest).optional(),
    sourceFiles: z.array(BackgroundWorkerSourceFileMetadata).optional(),
    runtime: z.string().optional(),
    runtimeVersion: z.string().optional(),
});
export const ImageDetailsMetadata = z.object({
    contentHash: z.string(),
    imageTag: z.string(),
});
//# sourceMappingURL=resources.js.map