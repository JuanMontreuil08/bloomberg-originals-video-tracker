import { SupervisorHttpClient } from "../runEngineWorker/index.js";
import { CheckpointServiceSuspendRequestBodyInput, CheckpointServiceRestoreRequestBodyInput } from "../schemas/checkpoints.js";
import { CheckpointType } from "../schemas/runEngine.js";
export type CheckpointClientOptions = {
    apiUrl: URL;
    workerClient: SupervisorHttpClient;
    orchestrator: CheckpointType;
};
export declare class CheckpointClient {
    private readonly opts;
    private readonly logger;
    constructor(opts: CheckpointClientOptions);
    suspendRun({ runFriendlyId, snapshotFriendlyId, body, }: {
        runFriendlyId: string;
        snapshotFriendlyId: string;
        body: Omit<CheckpointServiceSuspendRequestBodyInput, "type">;
    }): Promise<boolean>;
    restoreRun({ runFriendlyId, snapshotFriendlyId, body, }: {
        runFriendlyId: string;
        snapshotFriendlyId: string;
        body: CheckpointServiceRestoreRequestBodyInput;
    }): Promise<boolean>;
}
